name: 2. Sync Network IDs to Deploy Workflow

on:
  push:
    branches:
      - main # یا نام برنچ اصلی شما
    paths:
      - 'networks.json'

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GH_PAT }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Update deploy.yml using safe text replacement
      id: update_script
      run: |
        import json
        import re

        # خواندن ID ها از فایل JSON
        with open('networks.json', 'r') as f:
            networks = json.load(f)
        ids = ['manual'] + [net['id'] for net in networks]

        # ساخت بلوک متنی جدید برای options
        new_options_block = "        options:\n"
        for network_id in ids:
            new_options_block += f"          - {network_id}\n"

        # خواندن کل فایل yml به عنوان متن
        deploy_workflow_path = '.github/workflows/deploy.yml'
        with open(deploy_workflow_path, 'r') as f:
            original_content = f.read()

        # پیدا کردن و جایگزین کردن بلوک options قدیمی با بلوک جدید
        # این الگو به دنبال options: و تمام خطوط بعدی که با '-' شروع می‌شوند، می‌گردد
        updated_content = re.sub(
            r"(        options:)(\n          - .*)+",
            new_options_block.rstrip(), # .rstrip() برای حذف آخرین خط خالی
            original_content,
            flags=re.MULTILINE
        )

        # بررسی اینکه آیا تغییری ایجاد شده است
        if original_content == updated_content:
            print("No changes needed in deploy.yml, sync is complete.")
            with open(os.getenv('GITHUB_OUTPUT'), 'a') as f:
                f.write("changes_detected=false\n")
        else:
            print("Changes detected. Updating deploy.yml options...")
            with open(deploy_workflow_path, 'w') as f:
                f.write(updated_content)
            print("deploy.yml has been updated.")
            with open(os.getenv('GITHUB_OUTPUT'), 'a') as f:
                f.write("changes_detected=true\n")
      shell: python

    - name: Commit and Push changes
      if: steps.update_script.outputs.changes_detected == 'true'
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .github/workflows/deploy.yml
        git commit -m "chore: sync network profiles to deploy workflow"
        git push
